[{"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\index.js":"1","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\App.js":"2","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Cards.js":"4","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Card.js":"5","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Header.js":"6"},{"size":500,"mtime":1607285825116,"results":"7","hashOfConfig":"8"},{"size":2057,"mtime":1610451488011,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607285825116,"results":"10","hashOfConfig":"8"},{"size":5485,"mtime":1610532951826,"results":"11","hashOfConfig":"8"},{"size":1456,"mtime":1609819151424,"results":"12","hashOfConfig":"8"},{"size":2268,"mtime":1610530078566,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1v989m0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\index.js",[],["31","32"],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\App.js",[],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Cards.js",["33","34"],"import React, { useState } from 'react'\r\nimport reactLogo from '../images/logo512.png'\r\nimport \"./Cards.css\";\r\n\r\nconst Cards = ({amount, setPlayerTurn, incrementScore1, incrementScore2, resetScore, setDisableSelect, setRunningGame}) => {\r\n    const [player1, setPlayer1] = useState(true)\r\n    let secondCardOpen = false\r\n    const extraClass = player1 ? \"spieler1\" : \"spieler2\"\r\n        const randomNumbersArray = () => {\r\n            let randomArray = []\r\n            let newArray = []\r\n            for( let i = 0; i < amount; i++ ) {\r\n                // let randomTest =  randomNumber()   \r\n                // if(!randomArray.includes(randomTest)) {\r\n                    randomArray.push(randomNumber())\r\n                // } else {\r\n                //     i--\r\n                // }\r\n                console.log(randomArray)\r\n                \r\n        }\r\n        newArray = [...randomArray.concat(randomArray)]\r\n        newArray.sort(() => Math.random() - 0.5)\r\n        return newArray\r\n        }\r\n        const [allCards, setAllCards] = useState(randomNumbersArray())\r\n        const player1Styling  = \"3px solid lightgreen\"\r\n        const player2Styling  = \"3px solid orange\"\r\n\r\n        let firstId \r\n        let secondPart\r\n        let firstCardOpen = false\r\n        function handleClick(e) {\r\n            e.preventDefault();\r\n            if(!secondCardOpen) {\r\n                let firstValueId = e.target.id.split(\"-\")[0]\r\n                let secondValueId = e.target.id.split(\"-\")[1]\r\n                let imageUrl = `https://pokeres.bastionbot.org/images/pokemon/${firstValueId}.png`\r\n                let animeUrl = `https://media.kitsu.io/anime/poster_images/${firstValueId}/small.jpg?1431697256`\r\n                let picUrl = `https://source.unsplash.com/collection/${firstValueId}/120x120`\r\n            \r\n                if(e.target.className.includes(\"invisible\") && !firstCardOpen) {\r\n                    e.target.src = picUrl\r\n                    e.target.classList.add(\"visible\")\r\n                    e.target.classList.remove(\"invisible\")\r\n                    firstId = firstValueId\r\n                    secondPart = secondValueId\r\n                    firstCardOpen = true\r\n\r\n                } else if(e.target.className.includes(\"invisible\") && firstCardOpen) {\r\n                    e.target.src = picUrl\r\n                    e.target.classList.add(\"visible\")\r\n                    e.target.classList.remove(\"invisible\")\r\n                    secondCardOpen = true\r\n                    if(`${firstId}` === firstValueId) {\r\n                        firstCardOpen = false\r\n                        secondCardOpen = false\r\n                        if(player1) {\r\n                            document.getElementById(`${firstId}-${secondPart}`).style.border =  player1Styling\r\n                            document.getElementById(e.target.id).style.border =  player1Styling\r\n                            incrementScore1()\r\n                        } else {\r\n                            document.getElementById(`${firstId}-${secondPart}`).style.border =  player2Styling\r\n                            document.getElementById(e.target.id).style.border =  player2Styling\r\n                            incrementScore2()\r\n                        }\r\n                        firstId = \"none\"\r\n                        \r\n                    } else {\r\n                        document.getElementById(`${firstId}-${secondPart}`).classList.add(\"invisible\");\r\n                        e.target.className = \"invisible\"\r\n                        \r\n                        firstCardOpen = false\r\n                        setTimeout(function() {\r\n                            document.getElementById(`${firstId}-${secondPart}`).src = reactLogo\r\n                            e.target.src = reactLogo\r\n                            firstId = \"random\"\r\n                            secondCardOpen = false\r\n                                if(player1) {\r\n                                    setPlayer1(false)\r\n                                    setPlayerTurn(\"Spieler 2\")\r\n                                } else {\r\n                                    setPlayer1(true)\r\n                                    setPlayerTurn(\"Spieler 1\")\r\n                                }\r\n                        }, 2000)\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        }   \r\n    \r\n    function randomNumber() {\r\n        return Math.ceil(Math.random() * 251)\r\n    }\r\n    function reset() {\r\n        if(amount > 0) setDisableSelect(true)\r\n        setRunningGame(true)\r\n        resetScore()\r\n        setAllCards([])\r\n        setPlayerTurn(\"Spieler 1\")\r\n        setPlayer1(true)\r\n        setTimeout(function() {\r\n            setAllCards(randomNumbersArray())\r\n        }, 500)\r\n        \r\n    }\r\n    return (\r\n        <div className=\"cards-container\">\r\n            <button className=\"resetButton\" onClick={reset}>Runde starten</button>\r\n            \r\n            {allCards.map((data, index) => (\r\n            <img \r\n                key={index}\r\n                id={`${data}-${index}`}\r\n                src={reactLogo} \r\n                alt=\"\" \r\n                style={{margin: \"10px\", backgroundColor: \"#88998d\", borderRadius: \"8px\"}}\r\n                onClick={handleClick}\r\n                className={`${extraClass} invisible`}\r\n                />\r\n                \r\n            ))\r\n            }\r\n            <br />\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Card.js",["35","36","37"],"import React, { useState } from 'react'\r\nimport reactLogo from '../images/logo512.png'\r\n\r\nconst Card = ({number, arrayValue}) => {\r\n    const [firstCardVisible, setFirstCardVisible] = useState(false)\r\n    const [secondCardVisible, setSecondCardVisible] = useState(false)\r\n    \r\n    \r\n    const randomNumber = Math.ceil(Math.random() * 150)\r\n    const imageUrl = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${number}.png?raw=true`\r\n        // const newImage =  `https://picsum.photos/100`\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n        if(e.target.alt === \"1\") {\r\n            setFirstCardVisible(true)\r\n        } else {\r\n            setSecondCardVisible(true)\r\n        }\r\n        \r\n    }\r\n    \r\n    const firstCard = \r\n        <img \r\n            onClick={handleClick} \r\n            src={firstCardVisible ? imageUrl: reactLogo} \r\n            alt=\"1\" \r\n            height=\"100px\" \r\n            width=\"100px\"\r\n            />\r\n    \r\n    const secondCard = \r\n        <img onClick={handleClick} \r\n            src={secondCardVisible ? imageUrl: reactLogo} \r\n            alt=\"2\" \r\n            height=\"100px\" \r\n            width=\"100px\"\r\n            />\r\n\r\n    const [cardObject, setCardObject] = useState({firstCard, secondCard})\r\n    console.log(arrayValue)\r\n    return (\r\n        <div className=\"card-container\">\r\n            {firstCard}\r\n            {/* {secondCard} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n",["38","39"],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Header.js",["40"],"import React from 'react'\r\nimport \"./Header.css\"\r\nconst Header = ({playerTurn, player1Score, player2Score, amount, setDisableSelect, runningGame, setRunningGame}) => {\r\n    \r\n    const allCardsVisible = player1Score + player2Score == amount ? true : false\r\n    function returnPlayer() {\r\n        if(runningGame) {\r\n            if( !allCardsVisible || amount === 0 ) {\r\n                let playerOutput\r\n                if(playerTurn === \"Spieler 1\") {\r\n                    playerOutput =  `${playerTurn} : ${player1Score}`\r\n                } else {\r\n                    playerOutput = `${playerTurn} : ${player2Score}`\r\n                }\r\n                return playerOutput\r\n                \r\n            } else {\r\n                setDisableSelect(false)\r\n                setTimeout(function() {\r\n                    setRunningGame(false)\r\n                }, 8000)\r\n                \r\n                if(player1Score > player2Score) {\r\n                    return `Spieler 1 gewinnt ${player1Score} zu ${player2Score}`\r\n                } else if(player2Score > player1Score) {\r\n                    return `Spieler 2 gewinnt ${player2Score} zu ${player1Score}`\r\n                } else {\r\n                    return \"Unentschieden\"\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    function returnStyle() {\r\n        \r\n        const style1 = {\r\n            color: \"lightgreen\"\r\n        }\r\n        const style2 = {\r\n                color: \"orange\"\r\n        }\r\n        const style3 = {\r\n            color: \"white\"\r\n        }\r\n           \r\n        if( allCardsVisible ) {\r\n            if( player1Score > player2Score ) {\r\n                return style1\r\n            } else if( player2Score > player1Score ) {\r\n                return style2\r\n            } else {\r\n                return style3\r\n            }\r\n        } \r\n        else {\r\n            if (playerTurn === \"Spieler 1\") {\r\n                return style1\r\n            } else {\r\n                return style2\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"header__container\">\r\n            <div className=\"header__title\">Memory</div>\r\n            <div style={returnStyle()}  className=\"header__player\">{returnPlayer()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":38,"column":21,"nodeType":"47","messageId":"48","endLine":38,"endColumn":29},{"ruleId":"45","severity":1,"message":"49","line":39,"column":21,"nodeType":"47","messageId":"48","endLine":39,"endColumn":29},{"ruleId":"45","severity":1,"message":"50","line":9,"column":11,"nodeType":"47","messageId":"48","endLine":9,"endColumn":23},{"ruleId":"45","severity":1,"message":"51","line":39,"column":12,"nodeType":"47","messageId":"48","endLine":39,"endColumn":22},{"ruleId":"45","severity":1,"message":"52","line":39,"column":24,"nodeType":"47","messageId":"48","endLine":39,"endColumn":37},{"ruleId":"41","replacedBy":"53"},{"ruleId":"43","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":57,"nodeType":"57","messageId":"58","endLine":5,"endColumn":59},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'imageUrl' is assigned a value but never used.","Identifier","unusedVar","'animeUrl' is assigned a value but never used.","'randomNumber' is assigned a value but never used.","'cardObject' is assigned a value but never used.","'setCardObject' is assigned a value but never used.",["59"],["60"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]