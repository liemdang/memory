[{"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\index.js":"1","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\App.js":"2","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Cards.js":"4","C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Header.js":"5"},{"size":500,"mtime":1607285825116,"results":"6","hashOfConfig":"7"},{"size":2111,"mtime":1612188983318,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607285825116,"results":"9","hashOfConfig":"7"},{"size":5008,"mtime":1612189698490,"results":"10","hashOfConfig":"7"},{"size":2268,"mtime":1611488649194,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1v989m0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\index.js",[],["24","25"],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\App.js",[],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Cards.js",[],"C:\\Users\\User\\Desktop\\CodeProjekte\\memory\\src\\components\\Header.js",["26"],"import React from 'react'\r\nimport \"./Header.css\"\r\nconst Header = ({playerTurn, player1Score, player2Score, amount, setDisableSelect, runningGame, setRunningGame}) => {\r\n    \r\n    const allCardsVisible = player1Score + player2Score == amount ? true : false\r\n    function returnPlayer() {\r\n        if(runningGame) {\r\n            if( !allCardsVisible || amount === 0 ) {\r\n                let playerOutput\r\n                if(playerTurn === \"Spieler 1\") {\r\n                    playerOutput =  `${playerTurn} : ${player1Score}`\r\n                } else {\r\n                    playerOutput = `${playerTurn} : ${player2Score}`\r\n                }\r\n                return playerOutput\r\n                \r\n            } else {\r\n                setDisableSelect(false)\r\n                setTimeout(function() {\r\n                    setRunningGame(false)\r\n                }, 8000)\r\n                \r\n                if(player1Score > player2Score) {\r\n                    return `Spieler 1 gewinnt ${player1Score} zu ${player2Score}`\r\n                } else if(player2Score > player1Score) {\r\n                    return `Spieler 2 gewinnt ${player2Score} zu ${player1Score}`\r\n                } else {\r\n                    return \"Unentschieden\"\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    function returnStyle() {\r\n        \r\n        const style1 = {\r\n            color: \"lightgreen\"\r\n        }\r\n        const style2 = {\r\n                color: \"orange\"\r\n        }\r\n        const style3 = {\r\n            color: \"white\"\r\n        }\r\n           \r\n        if( allCardsVisible ) {\r\n            if( player1Score > player2Score ) {\r\n                return style1\r\n            } else if( player2Score > player1Score ) {\r\n                return style2\r\n            } else {\r\n                return style3\r\n            }\r\n        } \r\n        else {\r\n            if (playerTurn === \"Spieler 1\") {\r\n                return style1\r\n            } else {\r\n                return style2\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"header__container\">\r\n            <div className=\"header__title\">Memory</div>\r\n            <div style={returnStyle()}  className=\"header__player\">{returnPlayer()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":5,"column":57,"nodeType":"33","messageId":"34","endLine":5,"endColumn":59},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]